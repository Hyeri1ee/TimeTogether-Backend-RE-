name: Java CI with Gradle

# 동작 조건 설정 : master 브랜치에 push 혹은 pull request가 발생할 경우 동작한다.
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # gradlew 파일에 실행 권한을 부여하는 단계 추가
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew


    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      run: ./gradlew clean build -x test

    # 3. 디렉토리 생성
    - name: Make directory
      run: mkdir -p deploy

    # 4. jar 파일 복사
    - name: Copy jar
      run:  cp ./build/libs/*.jar ./deploy

    - name: Make zip file
      run: zip -r ./timetogether.zip ./deploy
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./timetogether.zip s3://timetogether
